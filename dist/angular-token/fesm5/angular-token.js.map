{"version":3,"file":"angular-token.js","sources":["ng://angular-token/lib/angular-token.token.ts","ng://angular-token/lib/angular-token.service.ts","ng://angular-token/lib/angular-token.interceptor.ts","ng://angular-token/lib/angular-token.module.ts","ng://angular-token/angular-token.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const ANGULAR_TOKEN_OPTIONS = new InjectionToken('ANGULAR_TOKEN_OPTIONS');\n","import { Injectable, Optional, Inject, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, fromEvent, interval, BehaviorSubject } from 'rxjs';\nimport { pluck, filter, share, finalize } from 'rxjs/operators';\n\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nimport {\n  SignInData,\n  RegisterData,\n  UpdatePasswordData,\n  ResetPasswordData,\n\n  UserType,\n  UserData,\n  AuthData,\n  ApiResponse,\n\n  AngularTokenOptions,\n\n  TokenPlatform,\n  TokenInAppBrowser,\n} from './angular-token.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularTokenService implements CanActivate {\n\n  get currentUserType(): string {\n    if (this.userType.value != null) {\n      return this.userType.value.name;\n    } else {\n      return undefined;\n    }\n  }\n\n  get currentUserData(): UserData {\n    return this.userData.value;\n  }\n\n  get currentAuthData(): AuthData {\n    return this.authData.value;\n  }\n\n  get apiBase(): string {\n    console.warn('[angular-token] The attribute .apiBase will be removed in the next major release, please use' +\n    '.tokenOptions.apiBase instead');\n    return this.options.apiBase;\n  }\n\n  get tokenOptions(): AngularTokenOptions {\n    return this.options;\n  }\n\n  set tokenOptions(options: AngularTokenOptions) {\n    this.options = (<any>Object).assign(this.options, options);\n  }\n\n  private options: AngularTokenOptions;\n  public userType: BehaviorSubject<UserType> = new BehaviorSubject<UserType>(null);\n  public authData: BehaviorSubject<AuthData> = new BehaviorSubject<AuthData>(null);\n  public userData: BehaviorSubject<UserData> = new BehaviorSubject<UserData>(null);\n  private global: Window | any;\n\n  private localStorage: Storage | any = {};\n\n  constructor(\n    private http: HttpClient,\n    @Inject(ANGULAR_TOKEN_OPTIONS) config: any,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private activatedRoute: ActivatedRoute,\n    @Optional() private router: Router\n  ) {\n    this.global = (typeof window !== 'undefined') ? window : {};\n\n    if (isPlatformServer(this.platformId)) {\n\n      // Bad pratice, needs fixing\n      this.global = {\n        open: (): void => null,\n        location: {\n          href: '/',\n          origin: '/'\n        }\n      };\n\n      // Bad pratice, needs fixing\n      this.localStorage.setItem = (): void => null;\n      this.localStorage.getItem = (): void => null;\n      this.localStorage.removeItem = (): void => null;\n    } else {\n      this.localStorage = localStorage;\n    }\n\n    const defaultOptions: AngularTokenOptions = {\n      apiPath:                    null,\n      apiBase:                    null,\n\n      signInPath:                 'auth/sign_in',\n      signInRedirect:             null,\n      signInStoredUrlStorageKey:  null,\n\n      signOutPath:                'auth/sign_out',\n      validateTokenPath:          'auth/validate_token',\n      signOutFailedValidate:      false,\n\n      registerAccountPath:        'auth',\n      deleteAccountPath:          'auth',\n      registerAccountCallback:    this.global.location.href,\n\n      updatePasswordPath:         'auth',\n\n      resetPasswordPath:          'auth/password',\n      resetPasswordCallback:      this.global.location.href,\n\n      userTypes:                  null,\n      loginField:                 'email',\n\n      oAuthBase:                  this.global.location.origin,\n      oAuthPaths: {\n        github:                   'auth/github'\n      },\n      oAuthCallbackPath:          'oauth_callback',\n      oAuthWindowType:            'newWindow',\n      oAuthWindowOptions:         null,\n\n      oAuthBrowserCallbacks: {\n        github:                   'auth/github/callback',\n      },\n    };\n\n    const mergedOptions = (<any>Object).assign(defaultOptions, config);\n    this.options = mergedOptions;\n\n    if (this.options.apiBase === null) {\n      console.warn(`[angular-token] You have not configured 'apiBase', which may result in security issues. ` +\n                   `Please refer to the documentation at https://github.com/neroniaky/angular-token/wiki`);\n    }\n\n    this.tryLoadAuthData();\n  }\n\n  userSignedIn(): boolean {\n    if (this.authData.value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.userSignedIn()) {\n      return true;\n    } else {\n      // Store current location in storage (usefull for redirection after signing in)\n      if (this.options.signInStoredUrlStorageKey) {\n        this.localStorage.setItem(\n          this.options.signInStoredUrlStorageKey,\n          state.url\n        );\n      }\n\n      // Redirect user to sign in if signInRedirect is set\n      if (this.router && this.options.signInRedirect) {\n        this.router.navigate([this.options.signInRedirect]);\n      }\n\n      return false;\n    }\n  }\n\n\n  /**\n   *\n   * Actions\n   *\n   */\n\n  // Register request\n  registerAccount(registerData: RegisterData, additionalData?: any): Observable<ApiResponse> {\n\n    registerData = Object.assign({}, registerData);\n\n    if (registerData.userType == null) {\n      this.userType.next(null);\n    } else {\n      this.userType.next(this.getUserTypeByName(registerData.userType));\n      delete registerData.userType;\n    }\n\n    if (\n      registerData.password_confirmation == null &&\n      registerData.passwordConfirmation != null\n    ) {\n      registerData.password_confirmation = registerData.passwordConfirmation;\n      delete registerData.passwordConfirmation;\n    }\n\n    if (additionalData !== undefined) {\n      registerData.additionalData = additionalData;\n    }\n\n    const login = registerData.login;\n    delete registerData.login;\n    registerData[this.options.loginField] = login;\n\n    registerData.confirm_success_url = this.options.registerAccountCallback;\n\n    return this.http.post<ApiResponse>(\n      this.getServerPath() + this.options.registerAccountPath, registerData\n    );\n  }\n\n  // Delete Account\n  deleteAccount(): Observable<ApiResponse> {\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.deleteAccountPath);\n  }\n\n  // Sign in request and set storage\n  signIn(signInData: SignInData, additionalData?: any): Observable<ApiResponse> {\n    this.userType.next((signInData.userType == null) ? null : this.getUserTypeByName(signInData.userType));\n\n    const body = {\n      [this.options.loginField]: signInData.login,\n      password: signInData.password\n    };\n\n    if (additionalData !== undefined) {\n      body.additionalData = additionalData;\n    }\n\n    const observ = this.http.post<ApiResponse>(\n      this.getServerPath() + this.options.signInPath, body\n    ).pipe(share());\n\n    observ.subscribe(res => this.userData.next(res.data));\n\n    return observ;\n  }\n\n  signInOAuth(oAuthType: string, inAppBrowser?: TokenInAppBrowser<any, any>, platform?: TokenPlatform) {\n\n    const oAuthPath: string = this.getOAuthPath(oAuthType);\n    const callbackUrl = `${this.global.location.origin}/${this.options.oAuthCallbackPath}`;\n    const oAuthWindowType: string = this.options.oAuthWindowType;\n    const authUrl: string = this.getOAuthUrl(oAuthPath, callbackUrl, oAuthWindowType);\n\n    if (oAuthWindowType === 'newWindow' ||\n      (oAuthWindowType == 'inAppBrowser' && (!platform || !platform.is('cordova') || !(platform.is('ios') || platform.is('android'))))) {\n      const oAuthWindowOptions = this.options.oAuthWindowOptions;\n      let windowOptions = '';\n\n      if (oAuthWindowOptions) {\n        for (const key in oAuthWindowOptions) {\n          if (oAuthWindowOptions.hasOwnProperty(key)) {\n              windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n          }\n        }\n      }\n\n      const popup = window.open(\n          authUrl,\n          '_blank',\n          `closebuttoncaption=Cancel${windowOptions}`\n      );\n      return this.requestCredentialsViaPostMessage(popup);\n    } else if (oAuthWindowType == 'inAppBrowser') {\n      let oAuthBrowserCallback = this.options.oAuthBrowserCallbacks[oAuthType];\n      if (!oAuthBrowserCallback) {\n        throw new Error(`To login with oAuth provider ${oAuthType} using inAppBrowser the callback (in oAuthBrowserCallbacks) is required.`);\n      }\n      // let oAuthWindowOptions = this.options.oAuthWindowOptions;\n      // let windowOptions = '';\n\n      //  if (oAuthWindowOptions) {\n      //     for (let key in oAuthWindowOptions) {\n      //         windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n      //     }\n      // }\n\n      let browser = inAppBrowser.create(\n          authUrl,\n          '_blank',\n          'location=no'\n      );\n\n      return new Observable((observer) => {\n        browser.on('loadstop').subscribe((ev: any) => {\n          if (ev.url.indexOf(oAuthBrowserCallback) > -1) {\n            browser.executeScript({code: \"requestCredentials();\"}).then((credentials: any) => {\n              this.getAuthDataFromPostMessage(credentials[0]);\n\n              let pollerObserv = interval(400);\n\n              let pollerSubscription = pollerObserv.subscribe(() => {\n                if (this.userSignedIn()) {\n                  observer.next(this.authData);\n                  observer.complete();\n\n                  pollerSubscription.unsubscribe();\n                  browser.close();\n                }\n              }, (error: any) => {\n                observer.error(error);\n                observer.complete();\n             });\n            }, (error: any) => {\n              observer.error(error);\n              observer.complete();\n           });\n          }\n        }, (error: any) => {\n          observer.error(error);\n          observer.complete();\n        });\n      })\n    } else if (oAuthWindowType === 'sameWindow') {\n      this.global.location.href = authUrl;\n      return undefined;\n    } else {\n      throw new Error(`Unsupported oAuthWindowType \"${oAuthWindowType}\"`);\n    }\n  }\n\n  processOAuthCallback(): void {\n    this.getAuthDataFromParams();\n  }\n\n  // Sign out request and delete storage\n  signOut(): Observable<ApiResponse> {\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.signOutPath)\n      // Only remove the localStorage and clear the data after the call\n      .pipe(\n        finalize(() => {\n            this.localStorage.removeItem('accessToken');\n            this.localStorage.removeItem('client');\n            this.localStorage.removeItem('expiry');\n            this.localStorage.removeItem('tokenType');\n            this.localStorage.removeItem('uid');\n\n            this.authData.next(null);\n            this.userType.next(null);\n            this.userData.next(null);\n          }\n        )\n      );\n  }\n\n  // Validate token request\n  validateToken(): Observable<ApiResponse> {\n    const observ = this.http.get<ApiResponse>(\n      this.getServerPath() + this.options.validateTokenPath\n    ).pipe(share());\n\n    observ.subscribe(\n      (res) => this.userData.next(res.data),\n      (error) => {\n        if (error.status === 401 && this.options.signOutFailedValidate) {\n          this.signOut();\n        }\n    });\n\n    return observ;\n  }\n\n  // Update password request\n  updatePassword(updatePasswordData: UpdatePasswordData): Observable<ApiResponse> {\n\n    if (updatePasswordData.userType != null) {\n      this.userType.next(this.getUserTypeByName(updatePasswordData.userType));\n    }\n\n    let args: any;\n\n    if (updatePasswordData.passwordCurrent == null) {\n      args = {\n        password:               updatePasswordData.password,\n        password_confirmation:  updatePasswordData.passwordConfirmation\n      };\n    } else {\n      args = {\n        current_password:       updatePasswordData.passwordCurrent,\n        password:               updatePasswordData.password,\n        password_confirmation:  updatePasswordData.passwordConfirmation\n      };\n    }\n\n    if (updatePasswordData.resetPasswordToken) {\n      args.reset_password_token = updatePasswordData.resetPasswordToken;\n    }\n\n    const body = args;\n    return this.http.put<ApiResponse>(this.getServerPath() + this.options.updatePasswordPath, body);\n  }\n\n  // Reset password request\n  resetPassword(resetPasswordData: ResetPasswordData, additionalData?: any): Observable<ApiResponse> {\n    \n    \n    if (additionalData !== undefined) {\n      resetPasswordData.additionalData = additionalData;\n    }\n\n    this.userType.next(\n      (resetPasswordData.userType == null) ? null : this.getUserTypeByName(resetPasswordData.userType)\n    );\n\n    const body = {\n      [this.options.loginField]: resetPasswordData.login,\n      redirect_url: this.options.resetPasswordCallback\n    };\n\n    return this.http.post<ApiResponse>(this.getServerPath() + this.options.resetPasswordPath, body);\n  }\n\n\n  /**\n   *\n   * Construct Paths / Urls\n   *\n   */\n\n  private getUserPath(): string {\n    return (this.userType.value == null) ? '' : this.userType.value.path + '/';\n  }\n\n  private getApiPath(): string {\n    let constructedPath = '';\n\n    if (this.options.apiBase != null) {\n      constructedPath += this.options.apiBase + '/';\n    }\n\n    if (this.options.apiPath != null) {\n      constructedPath += this.options.apiPath + '/';\n    }\n\n    return constructedPath;\n  }\n\n  private getServerPath(): string {\n    return this.getApiPath() + this.getUserPath();\n  }\n\n  private getOAuthPath(oAuthType: string): string {\n    let oAuthPath: string;\n\n    oAuthPath = this.options.oAuthPaths[oAuthType];\n\n    if (oAuthPath == null) {\n      oAuthPath = `/auth/${oAuthType}`;\n    }\n\n    return oAuthPath;\n  }\n\n  private getOAuthUrl(oAuthPath: string, callbackUrl: string, windowType: string): string {\n    let url: string;\n\n    url =   `${this.options.oAuthBase}/${oAuthPath}`;\n    url +=  `?omniauth_window_type=${windowType}`;\n    url +=  `&auth_origin_url=${encodeURIComponent(callbackUrl)}`;\n\n    if (this.userType.value != null) {\n      url += `&resource_class=${this.userType.value.name}`;\n    }\n\n    return url;\n  }\n\n\n  /**\n   *\n   * Get Auth Data\n   *\n   */\n\n  // Try to load auth data\n  private tryLoadAuthData(): void {\n\n    const userType = this.getUserTypeByName(this.localStorage.getItem('userType'));\n\n    if (userType) {\n      this.userType.next(userType);\n    }\n\n    this.getAuthDataFromStorage();\n\n    if (this.activatedRoute) {\n      this.getAuthDataFromParams();\n    }\n\n    if (this.authData) {\n        this.validateToken();\n    }\n  }\n\n  // Parse Auth data from response\n  public getAuthHeadersFromResponse(data: HttpResponse<any> | HttpErrorResponse): void {\n    const headers = data.headers;\n\n    const authData: AuthData = {\n      accessToken:    headers.get('access-token'),\n      client:         headers.get('client'),\n      expiry:         headers.get('expiry'),\n      tokenType:      headers.get('token-type'),\n      uid:            headers.get('uid')\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Parse Auth data from post message\n  private getAuthDataFromPostMessage(data: any): void {\n    const authData: AuthData = {\n      accessToken:    data['auth_token'],\n      client:         data['client_id'],\n      expiry:         data['expiry'],\n      tokenType:      'Bearer',\n      uid:            data['uid']\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Try to get auth data from storage.\n  public getAuthDataFromStorage(): void {\n\n    const authData: AuthData = {\n      accessToken:    this.localStorage.getItem('accessToken'),\n      client:         this.localStorage.getItem('client'),\n      expiry:         this.localStorage.getItem('expiry'),\n      tokenType:      this.localStorage.getItem('tokenType'),\n      uid:            this.localStorage.getItem('uid')\n    };\n\n    if (this.checkAuthData(authData)) {\n      this.authData.next(authData);\n    }\n  }\n\n  // Try to get auth data from url parameters.\n  private getAuthDataFromParams(): void {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      const authData: AuthData = {\n        accessToken:    queryParams['token'] || queryParams['auth_token'],\n        client:         queryParams['client_id'],\n        expiry:         queryParams['expiry'],\n        tokenType:      'Bearer',\n        uid:            queryParams['uid']\n      };\n\n      if (this.checkAuthData(authData)) {\n        this.authData.next(authData);\n      }\n    });\n  }\n\n  /**\n   *\n   * Set Auth Data\n   *\n   */\n\n  // Write auth data to storage\n  private setAuthData(authData: AuthData): void {\n    if (this.checkAuthData(authData)) {\n\n      this.authData.next(authData);\n\n      this.localStorage.setItem('accessToken', authData.accessToken);\n      this.localStorage.setItem('client', authData.client);\n      this.localStorage.setItem('expiry', authData.expiry);\n      this.localStorage.setItem('tokenType', authData.tokenType);\n      this.localStorage.setItem('uid', authData.uid);\n\n      if (this.userType.value != null) {\n        this.localStorage.setItem('userType', this.userType.value.name);\n      }\n\n    }\n  }\n\n\n  /**\n   *\n   * Validate Auth Data\n   *\n   */\n\n  // Check if auth data complete and if response token is newer\n  private checkAuthData(authData: AuthData): boolean {\n\n    if (\n      authData.accessToken != null &&\n      authData.client != null &&\n      authData.expiry != null &&\n      authData.tokenType != null &&\n      authData.uid != null\n    ) {\n      if (this.authData.value != null) {\n        return authData.expiry >= this.authData.value.expiry;\n      }\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   *\n   * OAuth\n   *\n   */\n\n  private requestCredentialsViaPostMessage(authWindow: any): Observable<any> {\n    const pollerObserv = interval(500);\n\n    const responseObserv = fromEvent(this.global, 'message').pipe(\n      pluck('data'),\n      filter(this.oAuthWindowResponseFilter)\n    );\n\n    responseObserv.subscribe(\n      this.getAuthDataFromPostMessage.bind(this)\n    );\n\n    const pollerSubscription = pollerObserv.subscribe(() => {\n      if (authWindow.closed) {\n        pollerSubscription.unsubscribe();\n      } else {\n        authWindow.postMessage('requestCredentials', '*');\n      }\n    });\n\n    return responseObserv;\n  }\n\n  private oAuthWindowResponseFilter(data: any): any {\n    if (data.message === 'deliverCredentials' || data.message === 'authFailure') {\n      return data;\n    }\n  }\n\n\n  /**\n   *\n   * Utilities\n   *\n   */\n\n  // Match user config by user config name\n  private getUserTypeByName(name: string): UserType {\n    if (name == null || this.options.userTypes == null) {\n      return null;\n    }\n\n    return this.options.userTypes.find(\n      userType => userType.name === name\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpInterceptor, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { AngularTokenService } from './angular-token.service';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AngularTokenInterceptor implements HttpInterceptor {\n\n  constructor( private tokenService: AngularTokenService ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // Get auth data from local storage\n    this.tokenService.getAuthDataFromStorage();\n\n    // Add the headers if the request is going to the configured server\n    const authData = this.tokenService.authData.value;\n\n    if (authData &&\n      (this.tokenService.tokenOptions.apiBase === null || req.url.match(this.tokenService.tokenOptions.apiBase))) {\n\n      const headers = {\n        'access-token': authData.accessToken,\n        'client':       authData.client,\n        'expiry':       authData.expiry,\n        'token-type':   authData.tokenType,\n        'uid':          authData.uid\n      };\n\n      req = req.clone({\n        setHeaders: headers\n      });\n    }\n\n    return next.handle(req).pipe(tap(\n        res => this.handleResponse(res),\n        err => this.handleResponse(err)\n    ));\n  }\n\n\n  // Parse Auth data from response\n  private handleResponse(res: HttpResponse<any> | HttpErrorResponse | HttpEvent<any>): void {\n    if (res instanceof HttpResponse || res instanceof HttpErrorResponse) {\n      if (this.tokenService.tokenOptions.apiBase === null || (res.url && res.url.match(this.tokenService.tokenOptions.apiBase))) {\n        this.tokenService.getAuthHeadersFromResponse(res);\n      }\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AngularTokenInterceptor } from './angular-token.interceptor';\nimport { AngularTokenOptions } from './angular-token.model';\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nexport * from './angular-token.service';\n\n@NgModule()\nexport class AngularTokenModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: AngularTokenModule) {\n    if (parentModule) {\n      throw new Error('AngularToken is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(options: AngularTokenOptions): ModuleWithProviders<AngularTokenModule> {\n    return {\n      ngModule: AngularTokenModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: AngularTokenInterceptor,\n          multi: true\n        },\n        options.angularTokenOptionsProvider ||\n        {\n          provide: ANGULAR_TOKEN_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AngularTokenInterceptor as ɵb} from './lib/angular-token.interceptor';\nexport {AngularTokenService as ɵa} from './lib/angular-token.service';"],"names":[],"mappings":"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"}